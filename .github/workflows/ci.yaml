name: CI
on: [push, pull_request, workflow_dispatch]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Install Rust toolchain (nightly)
        id: install_rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          default: true
      - name: Install SDL2
        run: sudo apt-get install libsdl2-dev

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-rust-${{ steps.install_rust.outputs.rustc_hash }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-rust-${{ steps.install_rust.outputs.rustc_hash }}-

      - name: cargo check
        run: cargo check --verbose --workspace --all-targets

      - name: cargo build
        run: cargo build --verbose

      - name: cargo test
        run: cargo test --verbose --workspace

      - name: cargo fmt
        run: cargo fmt --verbose --all -- --check

      - name: cargo clippy
        run: cargo clippy --verbose --workspace

  upload_docs:
    name: Upload documentation
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@v2
      - name: Install Rust toolchain (stable)
        id: install_rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-rust-${{ steps.install_rust.outputs.rustc_hash }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-rust-${{ steps.install_rust.outputs.rustc_hash }}-

      - name: Generate documentation
        run: ./docs.sh --verbose

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: target/doc
          force_orphan: true
